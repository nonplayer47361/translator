from typing import List, Dict, Tuple, Union
from braille_utils import flatten_braille_cell, tupleize
from collections import defaultdict

# 초성 (자음) 점자
INITIAL_TO_BRAILLE = {
    'ㄱ': [0,0,0,1,0,0], 'ㄲ': [[0,0,0,0,0,1],[0,0,0,1,0,0]],
    'ㄴ': [1,0,0,1,0,0], 'ㄷ': [0,1,0,1,0,0], 'ㄸ': [[0,0,0,0,0,1],[0,1,0,1,0,0]],
    'ㄹ': [0,0,0,0,1,0], 'ㅁ': [1,0,0,0,1,0], 'ㅂ': [0,0,0,1,1,0], 'ㅃ': [[0,0,0,0,0,1],[0,0,0,1,1,0]],
    'ㅅ': [0,0,0,0,0,1], 'ㅆ':  [[0,0,0,0,0,1],[0,0,0,0,0,1]],
    'ㅇ': [1,1,0,1,1,0], 'ㅈ': [0,0,0,1,0,1], 'ㅉ': [[0,0,0,0,0,1],[0,0,0,1,0,1]],
    'ㅊ': [0,0,0,0,1,1], 'ㅋ': [1,1,0,1,0,0], 'ㅌ': [1,1,0,0,1,0],
    'ㅍ': [1,0,0,1,1,0], 'ㅎ': [0,1,0,1,1,0],
}

# 중성 (모음) 점자
MEDIAL_TO_BRAILLE = {
    'ㅏ': [1,1,0,0,0,1], 'ㅐ': [1,1,1,0,1,0], 'ㅑ': [0,0,1,1,1,0], 'ㅒ': [0,1,1,1,1,0],
    'ㅓ': [0,1,1,1,0,0], 'ㅔ': [1,0,1,1,1,0], 'ㅕ': [1,0,0,0,1,1], 'ㅖ': [0,0,1,1,0,0],
    'ㅗ': [1,0,1,0,0,1], 'ㅘ': [1,1,1,0,0,1], 'ㅙ': [[1,1,1,0,0,1],[1,1,1,0,1,0]], 'ㅚ': [1,0,1,1,1,1],
    'ㅛ': [0,0,1,1,0,1], 'ㅜ': [1,0,1,1,0,0], 'ㅝ': [1,1,1,1,0,0], 'ㅞ': [[1,1,1,1,0,0],[1,1,1,0,1,0]],
    'ㅟ': [[1,0,1,1,0,0],[1,1,1,0,1,0]], 'ㅠ': [1,0,0,1,0,1],
    'ㅡ': [0,1,0,1,0,1], 'ㅢ': [0,1,0,1,1,1], 'ㅣ': [1,0,1,0,1,0],
}


# 종성 (받침) 점자
FINAL_TO_BRAILLE = {
    '':   [0,0,0,0,0,0],  # 받침 없음
    'ㄱ': [1,0,0,0,0,0], 'ㄲ': [[1,0,0,0,0,0],[1,0,0,0,0,0]],
    'ㄴ': [0,1,0,0,1,0], 'ㄷ': [0,0,1,0,1,0],
    'ㄹ': [0,1,0,0,0,0], 'ㅁ': [0,1,0,0,0,1],
    'ㅂ': [1,1,0,0,0,0], 'ㅅ': [0,0,1,0,0,0], 'ㅅ' : [0,0,1,1,0,0],
    'ㅇ': [0,1,1,0,1,1], 'ㅈ': [1,0,1,0,0,0],
    'ㅊ': [0,1,1,0,0,0], 'ㅋ': [0,1,1,0,1,0],
    'ㅌ': [0,1,1,0,0,1], 'ㅍ': [0,1,0,0,1,1],
    'ㅎ': [0,0,1,0,1,1],

    # 겹받침 (2셀)
    'ㄳ': [[1,0,0,0,0,0], [0,0,1,0,0,0]],
    'ㄵ': [[0,1,0,0,1,0], [1,0,1,0,0,0]],
    'ㄶ': [[0,1,0,0,1,0], [0,0,1,0,1,1]],
    'ㄺ': [[0,1,0,0,0,0], [1,0,0,0,0,0]],
    'ㄻ': [[0,1,0,0,0,0], [0,1,0,0,0,1]],
    'ㄼ': [[0,1,0,0,0,0], [1,1,0,0,0,0]],
    'ㄽ': [[0,1,0,0,0,0], [0,0,1,0,0,0]],
    'ㄾ': [[0,1,0,0,0,0], [0,1,1,0,0,1]],
    'ㄿ': [[0,1,0,0,0,0], [0,1,0,0,1,1]],
    'ㅀ': [[0,1,0,0,0,0], [0,0,1,0,1,1]],
    'ㅄ': [[1,1,0,0,0,0], [0,0,1,0,0,0]],
}

# 약자 (낱말 단축형)
HANGUL_BRAILLE_ABBREVIATION = {
    "그래서":     [[1,0,0,0,0,0],[0,1,1,1,0,0]],
    "그러나":     [[1,0,0,0,0,0],[1,0,0,1,0,0]],
    "그러면":     [[1,0,0,0,0,0],[0,1,0,0,1,0]],
    "그러므로":   [[1,0,0,0,0,0],[0,1,0,0,0,1]],
    "그러니까":   [[1,0,0,0,0,0], [0,1,1,1,1,0]],
    "그런데":     [[1,0,0,0,0,0],[1,0,1,1,1,0]],
    "그런즉":     [[1,0,0,0,0,0], [0,1,0,1,1,1]],
    "그리고":     [[1,0,0,0,0,0],[1,0,1,0,0,1]],
    "그리하여":   [[1,0,0,0,0,0],[1,0,0,0,1,1]],
    "하지만":     [[0,1,1,1,1,0], [1,1,1,0,0,0]],
    "하지만은":   [[0,1,1,1,1,0], [1,1,1,0,0,0], [0,1,0,0,1,0]],
    "가" : [1,1,0,1,0,1],
    "나" : [1,0,0,1,0,0],
    "다" : [0,1,0,1,0,0],
    "마" : [1,0,0,0,1,0,],
    "바" : [0,0,0,1,1,0,],
    "사" : [1,1,1,0,0,0],
    "자" : [0,0,0,1,0,1],
    "카" : [1,1,0,1,0,0],
    "타" : [1,1,0,0,1,0],
    "파" : [1,0,0,1,1,0],
    "하" : [0,1,0,1,1,0],
    "억" : [1,0,0,1,1,1],
    "언" : [0,1,1,1,1,1],
    "얼" : [0,1,1,1,1,0],
    "연" : [1,0,0,0,0,1],
    "열" : [1,1,0,0,1,1],
    "영" : [1,1,0,1,1,1],
    "옥" : [1,0,1,1,0,1],
    "온" : [1,1,1,0,1,1],
    "옹" : [1,1,1,1,1,1],
    "운" : [1,1,0,1,1,0],
    "울" : [1,1,1,1,0,1],
    "은" : [1,0,1,0,1,1],
    "을" : [0,1,1,1,0,1],
    "인" : [1,1,1,1,1,0],
    "것" : [[0,0,0,1,1,1],[0,1,1,1,0,0]],
}

# 숫자 점자
NUMBER_TO_BRAILLE = {
    "1" : [[0,0,1,1,1,1],[1,0,0,0,0,0]],
    "2" : [[0,0,1,1,1,1],[1,1,0,0,0,0]],
    "3" : [[0,0,1,1,1,1],[1,0,0,1,0,0]],
    "4" : [[0,0,1,1,1,1],[1,0,0,1,1,0]],
    "5" : [[0,0,1,1,1,1],[1,0,0,0,1,0]],
    "6" : [[0,0,1,1,1,1],[1,1,0,1,0,0]],
    "7" : [[0,0,1,1,1,1],[1,1,0,1,1,0]],
    "8" : [[0,0,1,1,1,1],[1,1,0,0,1,0]],
    "9" : [[0,0,1,1,1,1],[0,1,0,1,0,0]],
    "0" : [[0,0,1,1,1,1],[0,1,0,1,1,0]],
}

# 영문자 점자
ALPHABET_TO_BRAILLE = {
    'a': [1,0,0,0,0,0], 'b': [1,1,0,0,0,0], 'c': [1,0,0,1,0,0], 'd': [1,0,0,1,1,0],
    'e': [1,0,0,0,1,0], 'f': [1,1,0,1,0,0], 'g': [1,1,0,1,1,0], 'h': [1,1,0,0,1,0],
    'i': [0,1,0,1,0,0], 'j': [0,1,0,1,1,0], 'k': [1,0,1,0,0,0], 'l': [1,1,1,0,0,0],
    'm': [1,0,1,1,0,0], 'n': [1,0,1,1,1,0], 'o': [1,0,1,0,1,0], 'p': [1,1,1,1,0,0],
    'q': [1,1,1,1,1,0], 'r': [1,1,1,0,1,0], 's': [0,1,1,1,0,0], 't': [0,1,1,1,1,0],
    'u': [1,0,1,0,0,1], 'v': [1,1,1,0,0,1], 'w': [0,1,0,1,1,1], 'x': [1,0,1,1,0,1],
    'y': [1,0,1,1,1,1], 'z': [1,0,1,0,1,1],
}

# 특수기호 및 문장부호 점자 (일부 예시)
SYMBOL_TO_BRAILLE = {
    "[]" : [[0,0,0,0,1,0],[0,0,0,1,1,0],[1,1,1,0,1,1],[0,0,0,1,1,0],[0,1,1,1,1,1]],
    "//" : [[0,0,0,0,1,0],[0,0,0,1,1,0],[0,0,1,1,0,0],[0,0,0,1,1,0],[0,0,1,1,0,0]],
    "+" : [0,1,0,0,0,1],
    "-" : [0,0,1,0,1,0],
    "*" : [1,0,0,0,0,1],
    "/" : [[0,0,1,1,0,0],[0,0,1,1,0,0]],
    "=" : [[0,1,0,0,1,0],[0,1,0,0,1,0]],
    "<" : [[0,0,1,0,1,0],[0,0,1,0,1,0]],
    ">" : [[0,1,0,0,0,1],[0,1,0,0,0,1]],
    "." : [0,1,0,0,1,1],
    "?" : [0,1,1,0,0,1],
    "!" : [0,1,1,0,1,0], "," : [0,0,0,0,1,0],
    "·" : [[0,0,0,0,1,0],[0,1,1,0,0,0]],
    ":" : [[0,0,0,0,1,0],[0,1,0,0,0,0]],
    "/" : [[0,0,0,1,1,1],[0,0,1,1,0,0]],
    "“" : [0,1,1,0,0,1],
    "”" : [0,0,1,0,1,1],
    "‘" : [[0,0,0,0,0,1],[0,1,1,0,0,1]],
    "’" : [[0,0,1,0,1,1],[0,0,1,0,0,0]],
    "(" : [[0,1,1,0,0,1],[0,0,1,0,0,0]],
    ")" : [[0,0,0,0,0,1],[0,0,1,0,1,1]],
    "{" : [[0,1,1,0,0,1],[0,1,0,0,0,0]],
    "}" : [[0,0,0,0,1,0],[0,0,1,0,1,1]],
    "[" : [[0,1,1,0,0,1],[0,1,1,0,0,0]],
    "]" : [[0,0,0,0,1,1],[0,0,1,0,1,1]],
    "―" : [[0,0,1,0,0,1],[0,0,1,0,0,1]],
    "-" : [0,0,1,0,0,1], "~" : [[0,0,0,1,0,0],[0,0,1,0,1,0]],
    "￦" : [[0,0,1,0,1,1],[0,0,0,1,0,0],[0,1,0,1,1,1]],
    "$" : [[0,0,1,0,1,1],[0,0,0,1,0,0],[0,1,1,1,0,0]],
    "%" : [[0,0,1,0,1,1],[1,1,1,1,0,0]],
    "@" : [[0,0,0,1,0,0],[1,0,0,0,0,0]],
    "^" : [[0,0,0,1,0,0],[0,1,0,0,0,1]],
    "#" : [[0,0,0,1,1,1],[1,0,0,1,1,1]],
    "_" : [[0,0,0,1,1,1],[0,0,1,0,0,1]],
    '&': [[0,0,0,1,0,0],[1,1,1,1,0,1]],
}

# === INV 테이블 생성 (2차원 튜플 key) ===
def _invert_table(table):
    inv = {}
    for k, v in table.items():
        # v가 2차원이든 1차원이든 flatten 후 각각 튜플화하여 모두 등록
        for cell in flatten_braille_cell(v):
            inv[tuple(cell)] = k
    return inv

INV_INITIAL = _invert_table(INITIAL_TO_BRAILLE)
INV_MEDIAL = _invert_table(MEDIAL_TO_BRAILLE)
INV_FINAL = _invert_table(FINAL_TO_BRAILLE)
INV_NUMBER = _invert_table(NUMBER_TO_BRAILLE)
INV_ALPHA = _invert_table(ALPHABET_TO_BRAILLE)
INV_SYMBOL = _invert_table(SYMBOL_TO_BRAILLE)
INV_ABBREV = _invert_table(HANGUL_BRAILLE_ABBREVIATION)

# --- 프리픽스 ---
CAPITAL_PREFIX = [0,0,0,0,1,1]
NUMBER_PREFIX = [0,1,1,1,1,1]
# SYMBOL_PREFIX 위에서 선언

def encode_braille(text: str) -> List[List[int]]:
    """주어진 텍스트를 구분점자 규칙에 따라 점자로 변환"""
    result = []
    i = 0
    while i < len(text):
        ch = text[i]
        # 숫자
        if ch.isdigit():
            # 숫자 구간 시작 시 프리픽스 추가
            if not (result and result[-1] == NUMBER_PREFIX):
                result.append(NUMBER_PREFIX.copy())
            result.extend(flatten_braille_cell(NUMBER_TO_BRAILLE[ch]))
        # 영어 소문자
        elif 'a' <= ch <= 'z':
            if not (result and result[-1] == CAPITAL_PREFIX):
                result.append(CAPITAL_PREFIX.copy())
            result.extend(flatten_braille_cell(ALPHABET_TO_BRAILLE[ch]))
        # 기호
        elif ch in SYMBOL_TO_BRAILLE:
            result.extend(flatten_braille_cell(SYMBOL_TO_BRAILLE[ch]))
        # 한글 자모/약자
        elif ch in INITIAL_TO_BRAILLE:
            result.extend(flatten_braille_cell(INITIAL_TO_BRAILLE[ch]))
        elif ch in MEDIAL_TO_BRAILLE:
            result.extend(flatten_braille_cell(MEDIAL_TO_BRAILLE[ch]))
        elif ch in FINAL_TO_BRAILLE:
            result.extend(flatten_braille_cell(FINAL_TO_BRAILLE[ch]))
        elif ch in HANGUL_BRAILLE_ABBREVIATION:
            result.extend(flatten_braille_cell(HANGUL_BRAILLE_ABBREVIATION[ch]))
        else:
            # 기타 미지원 문자
            pass
        i += 1
    return result

if __name__ == "__main__":
    all_tables = {
        "INITIAL_TO_BRAILLE": INITIAL_TO_BRAILLE,
        "MEDIAL_TO_BRAILLE": MEDIAL_TO_BRAILLE,
        "FINAL_TO_BRAILLE": FINAL_TO_BRAILLE,
        "NUMBER_TO_BRAILLE": NUMBER_TO_BRAILLE,
        "ALPHABET_TO_BRAILLE": ALPHABET_TO_BRAILLE,
        "SYMBOL_TO_BRAILLE": SYMBOL_TO_BRAILLE,
        "HANGUL_BRAILLE_ABBREVIATION": HANGUL_BRAILLE_ABBREVIATION,
    }

    cell_to_keys = defaultdict(list)
    # 6점(한 셀) 점자만 중복 검사
    for table_name, table in all_tables.items():
        for k, v in table.items():
            for cell in flatten_braille_cell(v):
                # 6점 셀만 검사
                if isinstance(cell, (list, tuple)) and len(cell) == 6:
                    cell_to_keys[tuple(cell)].append((table_name, k))

    print("구분점자(프리픽스)로 구분 불가한 중복 점자 셀만 표시:")
    for cell, keylist in cell_to_keys.items():
        if len(keylist) > 1:
            print(f"{cell} -> {keylist}")